// Code generated by MockGen. DO NOT EDIT.
// Source: ./db/repository/section_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	enum "flow/enum"
	model "flow/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSectionRepository is a mock of SectionRepository interface
type MockSectionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSectionRepositoryMockRecorder
}

// MockSectionRepositoryMockRecorder is the mock recorder for MockSectionRepository
type MockSectionRepositoryMockRecorder struct {
	mock *MockSectionRepository
}

// NewMockSectionRepository creates a new mock instance
func NewMockSectionRepository(ctrl *gomock.Controller) *MockSectionRepository {
	mock := &MockSectionRepository{ctrl: ctrl}
	mock.recorder = &MockSectionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSectionRepository) EXPECT() *MockSectionRepositoryMockRecorder {
	return m.recorder
}

// FetchSectionFromSectionVersions mocks base method
func (m *MockSectionRepository) FetchSectionFromSectionVersions(completeSectionVersionNumberList map[int]bool) []model.SectionVersion {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSectionFromSectionVersions", completeSectionVersionNumberList)
	ret0, _ := ret[0].([]model.SectionVersion)
	return ret0
}

// FetchSectionFromSectionVersions indicates an expected call of FetchSectionFromSectionVersions
func (mr *MockSectionRepositoryMockRecorder) FetchSectionFromSectionVersions(completeSectionVersionNumberList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSectionFromSectionVersions", reflect.TypeOf((*MockSectionRepository)(nil).FetchSectionFromSectionVersions), completeSectionVersionNumberList)
}

// FetchSectionVersions mocks base method
func (m *MockSectionRepository) FetchSectionVersions(sectionStatus enum.Status, sectionVersionNumbers []int) []model.SectionVersion {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSectionVersions", sectionStatus, sectionVersionNumbers)
	ret0, _ := ret[0].([]model.SectionVersion)
	return ret0
}

// FetchSectionVersions indicates an expected call of FetchSectionVersions
func (mr *MockSectionRepositoryMockRecorder) FetchSectionVersions(sectionStatus, sectionVersionNumbers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSectionVersions", reflect.TypeOf((*MockSectionRepository)(nil).FetchSectionVersions), sectionStatus, sectionVersionNumbers)
}
