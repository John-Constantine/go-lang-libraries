// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/journey_service_util.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	model "flow/model"
	response_dto "flow/model/response_dto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJourneyServiceUtility is a mock of JourneyServiceUtility interface
type MockJourneyServiceUtility struct {
	ctrl     *gomock.Controller
	recorder *MockJourneyServiceUtilityMockRecorder
}

// MockJourneyServiceUtilityMockRecorder is the mock recorder for MockJourneyServiceUtility
type MockJourneyServiceUtilityMockRecorder struct {
	mock *MockJourneyServiceUtility
}

// NewMockJourneyServiceUtility creates a new mock instance
func NewMockJourneyServiceUtility(ctrl *gomock.Controller) *MockJourneyServiceUtility {
	mock := &MockJourneyServiceUtility{ctrl: ctrl}
	mock.recorder = &MockJourneyServiceUtilityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJourneyServiceUtility) EXPECT() *MockJourneyServiceUtilityMockRecorder {
	return m.recorder
}

// FetchAllJourneysFromDB mocks base method
func (m *MockJourneyServiceUtility) FetchAllJourneysFromDB(flowContext model.FlowContext) []model.Journey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAllJourneysFromDB", flowContext)
	ret0, _ := ret[0].([]model.Journey)
	return ret0
}

// FetchAllJourneysFromDB indicates an expected call of FetchAllJourneysFromDB
func (mr *MockJourneyServiceUtilityMockRecorder) FetchAllJourneysFromDB(flowContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAllJourneysFromDB", reflect.TypeOf((*MockJourneyServiceUtility)(nil).FetchAllJourneysFromDB), flowContext)
}

// FetchJourneyByIdFromDB mocks base method
func (m *MockJourneyServiceUtility) FetchJourneyByIdFromDB(flowExternalId string) model.Journey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchJourneyByIdFromDB", flowExternalId)
	ret0, _ := ret[0].(model.Journey)
	return ret0
}

// FetchJourneyByIdFromDB indicates an expected call of FetchJourneyByIdFromDB
func (mr *MockJourneyServiceUtilityMockRecorder) FetchJourneyByIdFromDB(flowExternalId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchJourneyByIdFromDB", reflect.TypeOf((*MockJourneyServiceUtility)(nil).FetchJourneyByIdFromDB), flowExternalId)
}

// GetModuleSectionAndFieldVersionsAndActiveVersionNumberList mocks base method
func (m *MockJourneyServiceUtility) GetModuleSectionAndFieldVersionsAndActiveVersionNumberList(journeys ...model.Journey) (map[int]model.ModuleVersion, map[int]model.SectionVersion, map[int]model.FieldVersion, map[int]bool, map[int]bool, map[int]bool) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range journeys {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetModuleSectionAndFieldVersionsAndActiveVersionNumberList", varargs...)
	ret0, _ := ret[0].(map[int]model.ModuleVersion)
	ret1, _ := ret[1].(map[int]model.SectionVersion)
	ret2, _ := ret[2].(map[int]model.FieldVersion)
	ret3, _ := ret[3].(map[int]bool)
	ret4, _ := ret[4].(map[int]bool)
	ret5, _ := ret[5].(map[int]bool)
	return ret0, ret1, ret2, ret3, ret4, ret5
}

// GetModuleSectionAndFieldVersionsAndActiveVersionNumberList indicates an expected call of GetModuleSectionAndFieldVersionsAndActiveVersionNumberList
func (mr *MockJourneyServiceUtilityMockRecorder) GetModuleSectionAndFieldVersionsAndActiveVersionNumberList(journeys ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleSectionAndFieldVersionsAndActiveVersionNumberList", reflect.TypeOf((*MockJourneyServiceUtility)(nil).GetModuleSectionAndFieldVersionsAndActiveVersionNumberList), journeys...)
}

// ConstructJourneysResponse mocks base method
func (m *MockJourneyServiceUtility) ConstructJourneysResponse(journeys []model.Journey, moduleVersionsMap map[int]model.ModuleVersion, sectionVersionsMap map[int]model.SectionVersion, fieldVersionsMap map[int]model.FieldVersion, completeModuleVersionNumberList, completeSectionVersionNumberList, completeFieldVersionNumberList map[int]bool) response_dto.JourneyResponsesDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConstructJourneysResponse", journeys, moduleVersionsMap, sectionVersionsMap, fieldVersionsMap, completeModuleVersionNumberList, completeSectionVersionNumberList, completeFieldVersionNumberList)
	ret0, _ := ret[0].(response_dto.JourneyResponsesDto)
	return ret0
}

// ConstructJourneysResponse indicates an expected call of ConstructJourneysResponse
func (mr *MockJourneyServiceUtilityMockRecorder) ConstructJourneysResponse(journeys, moduleVersionsMap, sectionVersionsMap, fieldVersionsMap, completeModuleVersionNumberList, completeSectionVersionNumberList, completeFieldVersionNumberList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConstructJourneysResponse", reflect.TypeOf((*MockJourneyServiceUtility)(nil).ConstructJourneysResponse), journeys, moduleVersionsMap, sectionVersionsMap, fieldVersionsMap, completeModuleVersionNumberList, completeSectionVersionNumberList, completeFieldVersionNumberList)
}

// ConstructFlowResponseWithModuleFieldSection mocks base method
func (m *MockJourneyServiceUtility) ConstructFlowResponseWithModuleFieldSection(journey model.Journey, completeModuleVersionNumberList map[int]bool, moduleVersionsMap map[int]model.ModuleVersion, completeSectionVersionNumberList map[int]bool, sectionVersionsMap map[int]model.SectionVersion, completeFieldVersionNumberList map[int]bool, fieldVersionsMap map[int]model.FieldVersion) response_dto.JourneyResponseDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConstructFlowResponseWithModuleFieldSection", journey, completeModuleVersionNumberList, moduleVersionsMap, completeSectionVersionNumberList, sectionVersionsMap, completeFieldVersionNumberList, fieldVersionsMap)
	ret0, _ := ret[0].(response_dto.JourneyResponseDto)
	return ret0
}

// ConstructFlowResponseWithModuleFieldSection indicates an expected call of ConstructFlowResponseWithModuleFieldSection
func (mr *MockJourneyServiceUtilityMockRecorder) ConstructFlowResponseWithModuleFieldSection(journey, completeModuleVersionNumberList, moduleVersionsMap, completeSectionVersionNumberList, sectionVersionsMap, completeFieldVersionNumberList, fieldVersionsMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConstructFlowResponseWithModuleFieldSection", reflect.TypeOf((*MockJourneyServiceUtility)(nil).ConstructFlowResponseWithModuleFieldSection), journey, completeModuleVersionNumberList, moduleVersionsMap, completeSectionVersionNumberList, sectionVersionsMap, completeFieldVersionNumberList, fieldVersionsMap)
}
