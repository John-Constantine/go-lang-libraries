// Code generated by MockGen. DO NOT EDIT.
// Source: ./utility/map_util.go

// Package mock_utility is a generated GoMock package.
package mock_utility

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMapUtility is a mock of MapUtility interface
type MockMapUtility struct {
	ctrl     *gomock.Controller
	recorder *MockMapUtilityMockRecorder
}

// MockMapUtilityMockRecorder is the mock recorder for MockMapUtility
type MockMapUtilityMockRecorder struct {
	mock *MockMapUtility
}

// NewMockMapUtility creates a new mock instance
func NewMockMapUtility(ctrl *gomock.Controller) *MockMapUtility {
	mock := &MockMapUtility{ctrl: ctrl}
	mock.recorder = &MockMapUtilityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMapUtility) EXPECT() *MockMapUtilityMockRecorder {
	return m.recorder
}

// GetKeyListFromKeyValueMap mocks base method
func (m *MockMapUtility) GetKeyListFromKeyValueMap(keyMap map[int]bool) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyListFromKeyValueMap", keyMap)
	ret0, _ := ret[0].([]int)
	return ret0
}

// GetKeyListFromKeyValueMap indicates an expected call of GetKeyListFromKeyValueMap
func (mr *MockMapUtilityMockRecorder) GetKeyListFromKeyValueMap(keyMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyListFromKeyValueMap", reflect.TypeOf((*MockMapUtility)(nil).GetKeyListFromKeyValueMap), keyMap)
}
